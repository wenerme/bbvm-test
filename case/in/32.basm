; 32,33,34,35,36
; 32 | 整数转换为字符串 | r3的值 | r1:整数<br>r3:目标字符串 | r3所代表字符串的内容被修改
in r3, 2
ld int r2, LOWER
in r0, 5

ld int r1, 123
in r0, 32

out 0, r1;>123
out 1, r0;>123
out 1, r3;>123

; 33
; 33 | 字符串转换为整数 | 整数 | r3:字符串 |
ld int r3, INT_STR
in r0, 33
out 0, r0;>12345

ld int r3, LOWER
in r0, 33
out 0, r0;>0
; 错误的转换返回0

; 34
; 34 | 获取字符的ASCII码 | ASCII码 | r3:字符串 |
ld int r3, INT_STR
in r0, 34
out 0, r0;>49

; 35
; 左取字符串 | r3的值 | r1:截取长度<br>r2:源字符串<br>r3:目标字符串 | r3所代表字符串的内容被修改 （此端口似乎不正常）
; BUG: 需要传入有内容的字符串
in r3, 2
ld int r2, LONG
in r0, 5
ld int [EMPTY_HDL], r3; store

in r3, 2
ld int r2, LONG
in r0, 5
ld int [STR_HDL], r3; store

; BUG: PC 上该demo会出问题,结果为 ABCXYZ, r3句柄值没变
; BUG: 在汇编操作35 36端口的时候,长度会变
ld int r3, [EMPTY_HDL]
ld int r2, UPPER
ld int r1, 3
in r0, 35
out 1, r0;>WEN
; VM> 0987654321
; 因为 r3 句柄值未变
out 1, r3;>WEN
; VM> 0987654321

; 36
ld int r2, UPPER
; 虽然截取的长度是5,但是只会返回3的长度内容
ld int r1, 5
in r0, 36
out 1, r0;>ERXYZ
; VM> XYZ
out 1, r3;>ERXYZ
; VM> XYZ
out 0, r3;>-2

; BUG: PC 上该demo会出问题,需要确保 r3足够的长度,否则会返回r2的值
ld int r2, UPPER
in r0, 5

; BUG: 长度加了一
ld int r2, LOWER
ld int r1, 5
in r0, 36
out 1, r0;>cdefg
; 长度减少了 1
; VM> defg
out 0, r3;>-2

exit
DATA UPPER char "WENERXYZ",0
DATA LOWER char "abcdefg",0
DATA EMPTY_HDL int 0
DATA STR_HDL int 0
DATA INT_STR char "12345.99",0
DATA LONG char "0987654321",0
